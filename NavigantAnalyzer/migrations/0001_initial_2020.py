# Generated by Django 3.0.1 on 2020-11-28 19:53

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.expressions


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Club',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=63)),
            ],
        ),
        migrations.CreateModel(
            name='Runner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=63)),
                ('last_name', models.CharField(blank=True, max_length=63)),
                ('name', models.CharField(blank=True, max_length=127)),
                ('birthday', models.DateTimeField(blank=True, null=True)),
                ('clubs', models.ManyToManyField(blank=True, to='NavigantAnalyzer.Club')),
            ],
        ),
        migrations.CreateModel(
            name='MatchName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=127)),
                ('runner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NavigantAnalyzer.Runner')),
            ],
        ),
        migrations.CreateModel(
            name='Race',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=127)),
                ('url', models.URLField(blank=True)),
                ('opt_uuid', models.UUIDField(blank=True, null=True)),
                ('serie', models.CharField(blank=True, max_length=127)),
                ('begin', models.DateTimeField(blank=True, null=True)),
                ('raw_data_file', models.FileField(blank=True, upload_to='races/%Y')),
                ('upload_time', models.DateTimeField(blank=True, null=True)),
                ('uploaded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Results_flat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('race_id', models.IntegerField()),
                ('race_name', models.CharField(max_length=127)),
                ('race_serie', models.CharField(blank=True, max_length=127)),
                ('race_begin', models.DateTimeField(blank=True, null=True)),
                ('result_start_time', models.DateTimeField(blank=True, null=True)),
                ('runner_last_name', models.CharField(blank=True, max_length=63)),
                ('runner_first_name', models.CharField(blank=True, max_length=63)),
                ('result_emit', models.CharField(blank=True, max_length=12)),
                ('course_name', models.CharField(max_length=63)),
                ('course_length', models.IntegerField(blank=True, null=True)),
                ('course_num_participants', models.IntegerField(blank=True, null=True)),
                ('course_min_time', models.IntegerField(blank=True, null=True)),
                ('course_mean_time', models.IntegerField(blank=True, null=True)),
                ('course_min_puistotime', models.IntegerField(blank=True, null=True)),
                ('course_mean_puistotime', models.IntegerField(blank=True, null=True)),
                ('visit_min_time', models.IntegerField(blank=True, null=True)),
                ('visit_mean_time', models.IntegerField(blank=True, null=True)),
                ('visit_min_puistotime', models.IntegerField(blank=True, null=True)),
                ('visit_mean_puistotime', models.IntegerField(blank=True, null=True)),
                ('leg_min_time', models.IntegerField(blank=True, null=True)),
                ('leg_mean_time', models.IntegerField(blank=True, null=True)),
                ('leg_min_puistotime', models.IntegerField(blank=True, null=True)),
                ('leg_mean_puistotime', models.IntegerField(blank=True, null=True)),
                ('visit_order', models.IntegerField()),
                ('visit_code', models.IntegerField()),
                ('visit_time', models.IntegerField()),
                ('visit_position', models.IntegerField(blank=True)),
                ('visit_puistoposition', models.IntegerField(blank=True)),
                ('leg_time', models.IntegerField(blank=True)),
                ('leg_position', models.IntegerField(blank=True)),
                ('leg_puistoposition', models.IntegerField(blank=True)),
            ],
            options={
                'db_table': 'NavigantAnalyzer_results_flat',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Pointsschema',
            fields=[
                ('position', models.IntegerField(primary_key=True, serialize=False)),
                ('points', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Puistoserie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=127)),
            ],
        ),
        migrations.CreateModel(
            name='Puistoseriescore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(null=True)),
                ('puistoserie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NavigantAnalyzer.Puistoserie')),
                ('runner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='NavigantAnalyzer.Runner')),
                ('position', models.IntegerField(null=True)),
                ('position_alt', models.IntegerField(null=True)),
                ('score_alt', models.IntegerField(null=True)),
            ],
            options={
                'ordering': ['-score'],
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=63)),
                ('length', models.IntegerField(blank=True, null=True)),
                ('num_participants', models.IntegerField(blank=True, null=True)),
                ('race', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NavigantAnalyzer.Race')),
                ('mean_puistotime', models.IntegerField(blank=True, null=True)),
                ('mean_time', models.IntegerField(blank=True, null=True)),
                ('min_puistotime', models.IntegerField(blank=True, null=True)),
                ('min_time', models.IntegerField(blank=True, null=True)),
                ('puistoman_time', models.IntegerField(null=True)),
                ('puistoserie', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='NavigantAnalyzer.Puistoserie')),
                ('begin', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Coursecontrols',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ordernumber', models.IntegerField()),
                ('code', models.IntegerField()),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NavigantAnalyzer.Course')),
                ('leg_mean_puistotime', models.IntegerField(blank=True, null=True)),
                ('leg_mean_time', models.IntegerField(blank=True, null=True)),
                ('leg_min_puistotime', models.IntegerField(blank=True, null=True)),
                ('leg_min_time', models.IntegerField(blank=True, null=True)),
                ('mean_puistotime', models.IntegerField(blank=True, null=True)),
                ('mean_time', models.IntegerField(blank=True, null=True)),
                ('min_puistotime', models.IntegerField(blank=True, null=True)),
                ('min_time', models.IntegerField(blank=True, null=True)),
                ('puistoman_time', models.IntegerField(null=True)),
                ('distance', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Puistocoursescore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('begin', models.DateTimeField(blank=True, null=True)),
                ('score', models.IntegerField(null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NavigantAnalyzer.Course')),
                ('puistoseriescore', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NavigantAnalyzer.Puistoseriescore')),
            ],
            options={
                'ordering': ['-begin'],
            },
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('emit', models.CharField(blank=True, max_length=12, null=True)),
                ('club', models.CharField(blank=True, max_length=63, null=True)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('read_time', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=12)),
                ('time', models.IntegerField(blank=True, null=True)),
                ('position', models.IntegerField(blank=True, null=True)),
                ('puistoposition', models.IntegerField(blank=True, null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NavigantAnalyzer.Course')),
                ('runner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='NavigantAnalyzer.Runner')),
                ('puisto_max_level', models.FloatField(null=True)),
                ('puisto_mistakes', models.IntegerField(null=True)),
                ('puisto_optimum', models.IntegerField(null=True)),
                ('puisto_success', models.FloatField(null=True)),
                ('puistodiff_time_l', models.IntegerField(null=True)),
                ('puistodiff_time_pm', models.IntegerField(null=True)),
                ('puistoperc_time_l', models.FloatField(null=True)),
                ('puistoperc_time_pm', models.FloatField(null=True)),
            ],
            options={
                'ordering': [django.db.models.expressions.OrderBy(django.db.models.expressions.F('position'), nulls_last=True)],
            },
        ),
        migrations.CreateModel(
            name='Visit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ordernumber', models.IntegerField()),
                ('code', models.IntegerField()),
                ('time', models.IntegerField(null=True)),
                ('position', models.IntegerField(blank=True, null=True)),
                ('puistoposition', models.IntegerField(blank=True, null=True)),
                ('leg_time', models.IntegerField(blank=True, null=True)),
                ('leg_position', models.IntegerField(blank=True, null=True)),
                ('leg_puistoposition', models.IntegerField(blank=True, null=True)),
                ('result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NavigantAnalyzer.Result')),
                ('coursecontrol', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='NavigantAnalyzer.Coursecontrols')),
                ('leg_puistodiff_time_l', models.IntegerField(null=True)),
                ('leg_puistodiff_time_pm', models.IntegerField(null=True)),
                ('leg_puistoperc_time_l', models.FloatField(null=True)),
                ('leg_puistoperc_time_pm', models.FloatField(null=True)),
                ('puisto_success', models.FloatField(null=True)),
                ('puistodiff_time_l', models.IntegerField(null=True)),
                ('puistodiff_time_pm', models.IntegerField(null=True)),
            ],
        ),
    ]
